<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="urn:AcesMetadata:AcesMetadataFile:v2.0"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:amf="urn:AcesMetadata:AcesMetadataFile:v2.0"
	xmlns:cdl="urn:ASC:CDL:v1.01" elementFormDefault="qualified" attributeFormDefault="unqualified">

	<!-- Import CDL Schema -->
	<xs:import schemaLocation="ASC-CDL_schema_v1.01.xsd" namespace="urn:ASC:CDL:v1.01"/>

	<!-- Define general types -->
	<xs:simpleType name="SingleDigit">
		<xs:restriction base="xs:integer">
			<xs:totalDigits value="1"/>
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="9"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="DateTime">
		<xs:sequence>
			<xs:element name="CreationDateTime" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
			<xs:element name="ModificationDateTime" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<!-- Define transform name types -->
	<xs:simpleType name="TnLmt">
		<xs:restriction base="xs:string">
			<xs:pattern value="(LMT\.\S+\.a\d{1}\.v\d+)|(LMT\.Academy\.\S+\.a\d{1}\.\d{1}\.\d{1})"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TnIdt">
		<xs:restriction base="xs:string">
			<xs:pattern value="(IDT\.\S+\.a\S+\.v\S+)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TnOdt">
		<xs:restriction base="xs:string">
			<xs:pattern value="(ODT\.\S+\.\S+\.a\d{1}\.v\d+)|(ODT\.Academy\.\S+\.a\d{1}\.\d{1}\.\d{1})"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TnOutputTransform">
		<xs:restriction base="xs:string">
			<xs:pattern value="(RRTODT\.\S+\.\S+\.a\d{1}\.v\d+)|(RRTODT\.Academy\.\S+\.a\d{1}\.\d{1}\.\d{1})"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TnRRT">
		<xs:restriction base="xs:string">
			<xs:pattern value="(RRT\.a\d{1}\.\d\.\d+)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TnAcesToLmtWorkingSpace">
		<xs:restriction base="xs:string">
			<xs:pattern value="(ACEScsc\.\S+\.a\d{1}\.\d{1}\.\d{1})"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="TnLmtWorkingSpaceToAces">
		<xs:restriction base="xs:string">
			<xs:pattern value="(ACEScsc\.\S+\.a\S+\.\S+\.\S+)"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- Define identifier types -->
	<xs:simpleType name="UuidStringType">
		<xs:restriction base="xs:string">
			<xs:pattern
				value="([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})|(\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\})"/>
			<xs:minLength value="0"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UuidVersionType">
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="1"/>
			<xs:maxInclusive value="5"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="UuidType">
		<xs:simpleContent>
			<xs:extension base="amf:UuidStringType">
				<xs:attribute name="Version" type="amf:UuidVersionType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:simpleType name="HashAlgoType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="sha256"/>
			<xs:enumeration value="sha1"/>
			<xs:enumeration value="md5"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="HashType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="Algorithm" type="amf:HashAlgoType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Define transform types -->
	<xs:complexType name="TransformType">
		<xs:sequence>
			<xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Hash" type="amf:HashType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="IdtType">
		<xs:complexContent>
			<xs:extension base="amf:TransformType">
				<xs:sequence>
					<xs:element name="TransformId" type="amf:TnIdt" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
				<xs:attribute name="Applied" type="xs:boolean" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="RrtType">
		<xs:complexContent>
			<xs:extension base="amf:TransformType">
				<xs:sequence>
					<xs:element name="TransformId" type="amf:TnRRT" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="OdtType">
		<xs:complexContent>
			<xs:extension base="amf:TransformType">
				<xs:sequence>
					<xs:element name="TransformId" type="amf:TnOdt" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="OutputTransformType">
		<xs:complexContent>
			<xs:extension base="amf:TransformType">
				<xs:choice minOccurs="1" maxOccurs="1">
					<xs:sequence>
						<xs:element name="TransformId" type="amf:TnOutputTransform" minOccurs="1" maxOccurs="1"/>
					</xs:sequence>
					<xs:sequence>
						<xs:element name="Rrt" type="amf:RrtType" minOccurs="1" maxOccurs="1"/>
						<xs:element name="Odt" type="amf:OdtType" minOccurs="1" maxOccurs="1"/>
					</xs:sequence>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AcesToLmtWorkingSpaceType">
		<xs:complexContent>
			<xs:extension base="amf:TransformType">
				<xs:sequence>
					<xs:element name="TransformId" type="amf:TnAcesToLmtWorkingSpace" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="LmtWorkingSpaceToAcesType">
		<xs:complexContent>
			<xs:extension base="amf:TransformType">
				<xs:sequence>
					<xs:element name="TransformId" type="amf:TnLmtWorkingSpaceToAces" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="LmtWorkingSpaceType">
		<xs:sequence>
			<xs:element name="AcesToLmtWorkingSpace" type="amf:AcesToLmtWorkingSpaceType" minOccurs="1" maxOccurs="1"/>
			<xs:element name="LmtWorkingSpaceToAces" type="amf:LmtWorkingSpaceToAcesType" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="LookTransformsType">
		<xs:choice minOccurs="1" maxOccurs="5">
			<xs:element name="LookFile" type="amf:LookFileType"/>
			<xs:element name="Asc-Cdl" type="amf:CdlType"/>
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="LmtType">
		<xs:complexContent>
			<xs:extension base="amf:TransformType">
				<xs:sequence>
					<xs:element name="LmtWorkingSpace" type="amf:LmtWorkingSpaceType" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
				<xs:attribute name="LmtStackPosition" type="amf:SingleDigit" use="required"/>
				<xs:attribute name="Applied" type="xs:boolean" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="CdlType">
		<xs:complexContent>
			<xs:extension base="amf:LmtType">
				<xs:sequence>
					<xs:element name="SOPNode" type="cdl:SOPNodeType" minOccurs="1" maxOccurs="1"/>
					<xs:element name="SatNode" type="cdl:SatNodeType" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="LookFileType">
		<xs:complexContent>
			<xs:extension base="amf:LmtType">
				<xs:sequence>
					<xs:element name="TransformId" type="amf:TnLmt" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AcesVersionType">
		<xs:sequence>
			<xs:element name="AcesMajorVersion" type="amf:SingleDigit" minOccurs="1" maxOccurs="1"/>
			<xs:element name="AcesMinorVersion" type="amf:SingleDigit" minOccurs="1" maxOccurs="1"/>
			<xs:element name="AcesPatchVersion" type="amf:SingleDigit" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="InfoType">
		<xs:sequence>
			<xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="DateTime" type="amf:DateTime" minOccurs="1" maxOccurs="1"/>
			<xs:element name="Uuid" type="amf:UuidType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="PipelineInfoType">
		<xs:complexContent>
			<xs:extension base="amf:InfoType">
				<xs:sequence>
					<xs:element name="AcesVersion" type="amf:AcesVersionType" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AcesPipelineType">
		<xs:sequence>
			<xs:element name="PipelineInfo" type="amf:PipelineInfoType" minOccurs="1" maxOccurs="1"/>
			<xs:element name="InputTransform" type="amf:IdtType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="LookTransforms" type="amf:LookTransformsType" minOccurs="0" maxOccurs="1">
				<xs:unique name="UniqueLmtStackPosition">
					<xs:selector xpath="amf:LookFile | amf:Asc-Cdl" />
					<xs:field xpath="@lmtStackPosition" />
				</xs:unique>
			</xs:element>
			<xs:element name="OutputTransform" type="amf:OutputTransformType" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>

	<!-- Define ACES Metadata File element -->
	<xs:element name="AcesMetadataFile">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="FileInfo" type="amf:InfoType" minOccurs="1" maxOccurs="1"/>
				<xs:element name="AcesPipeline" type="amf:AcesPipelineType" minOccurs="1" maxOccurs="1"/>
				<xs:element name="ArchivedAcesPipeline" type="amf:AcesPipelineType" minOccurs="0" maxOccurs="10"/>
			</xs:sequence>
			<xs:attribute name="Version" type="xs:decimal" use="required" fixed="2.0"/>
		</xs:complexType>
	</xs:element>

</xs:schema>
